import React, { useState } from 'react';
import {
  Layout,
  Card,
  Row,
  Col,
  Typography,
  Button,
  Tag,
  Input,
} from 'antd';
import { useNavigate } from 'react-router-dom'; // ‡πÄ‡∏û‡∏¥‡πà‡∏° useNavigate

const { Header, Content } = Layout;
const { Title } = Typography;

const StudentDashboard: React.FC = () => {
  const navigate = useNavigate(); // ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô navigate

  const handleLogout = () => {
    localStorage.removeItem('token'); // ‡∏´‡∏£‡∏∑‡∏≠ studentID ‡πÅ‡∏•‡πâ‡∏ß‡πÅ‡∏ï‡πà‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏ä‡πâ
    localStorage.removeItem('studentID');
    navigate('/sign-in'); // ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ login
  };

  // ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏á‡∏≤‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
  const jobData = [
    {
      title: 'Frontend Intern',
      company: '‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó ABC ‡∏à‡∏≥‡∏Å‡∏±‡∏î',
      location: '‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø',
      applied: true,
    },
    {
      title: 'Backend Developer',
      company: 'XYZ Tech',
      location: '‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà',
      applied: false,
    },
    {
      title: 'UX/UI Designer',
      company: 'Design Studio',
      location: '‡∏Ç‡∏≠‡∏ô‡πÅ‡∏Å‡πà‡∏ô',
      applied: false,
    },
  ];

  // ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
  const [searchText, setSearchText] = useState('');

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Å‡∏£‡∏≠‡∏á‡∏á‡∏≤‡∏ô
  const filteredJobs = jobData.filter(
    (job) =>
      job.title.toLowerCase().includes(searchText.toLowerCase()) ||
      job.company.toLowerCase().includes(searchText.toLowerCase()) ||
      job.location.toLowerCase().includes(searchText.toLowerCase())
  );

  // ‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏á‡∏≤‡∏ô
  const JobCard = ({
    title,
    company,
    location,
    applied,
  }: {
    title: string;
    company: string;
    location: string;
    applied: boolean;
  }) => (
    <Card title={title} bordered>
      <p>‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó: {company}</p>
      <p>‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà: {location}</p>
      {applied ? (
        <Tag color="green">‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÅ‡∏•‡πâ‡∏ß</Tag>
      ) : (
        <Button type="primary">‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏á‡∏≤‡∏ô</Button>
      )}
    </Card>
  );

  return (
    <Layout style={{ minHeight: '100vh' }}>
      <Layout>
        <Header
          style={{
            background: '#fff',
            padding: '16px 24px',
            display: 'flex',
            justifyContent: 'space-between',
            alignItems: 'center',
          }}
        >
          <Title level={3} style={{ margin: 0 }}>
            Student Dashboard
          </Title>
          <Button type="primary" danger onClick={handleLogout}>
            ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö
          </Button>
        </Header>
        <Content style={{ margin: '16px' }}>
          {/* üîç ‡∏ä‡πà‡∏≠‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏á‡∏≤‡∏ô */}
          <Input.Search
            placeholder="‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏™‡∏ô‡πÉ‡∏à..."
            allowClear
            enterButton="‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤"
            size="large"
            style={{ marginBottom: 24 }}
            onSearch={(value) => setSearchText(value)}
            onChange={(e) => setSearchText(e.target.value)}
          />

          {/* üßæ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏á‡∏≤‡∏ô */}
          <Row gutter={[16, 16]}>
            {filteredJobs.length > 0 ? (
              filteredJobs.map((job, index) => (
                <Col key={index} span={8}>
                  <JobCard {...job} />
                </Col>
              ))
            ) : (
              <Col span={24}>
                <p>‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤</p>
              </Col>
            )}
          </Row>
        </Content>
      </Layout>
    </Layout>
  );
};

export default StudentDashboard;
